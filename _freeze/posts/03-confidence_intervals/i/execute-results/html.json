{
  "hash": "0a66c26df6a1742b1e16338aa773d5fe",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Mini Project 3: Simulation to Investigate Confidence Intervals\"\nauthor: \"Brody Pinto and Lily Kendall\"\ndate: \"2025-03-05\"\nformat: \n  html:\n    embed-resources: true\nexecute: \n  echo: true\n  output: true\n  warning: false\n---\n\n\n\n## Step 1\n\nsmall: n = 4\n\nmedium: n = 20\n\nlarge: n = 100\n\np (close): p = 0.46\n\np (far): p = 0.87\n\n\n## Function for generating sample proportion\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(resample)\nlibrary(tidyverse)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngenerate_samp_prop <- function(n, p) {\n  x <- rbinom(1, n, p) # randomly generate number of successes for the sample\n\n  ## number of successes divided by sample size\n  phat <- x / n\n  \n  # 90% confidence interval\n  lb <- phat - qnorm(0.95) * (sqrt(phat * (1 - phat) / n))\n  ub <- phat + qnorm(0.95) * (sqrt(phat * (1 - phat) / n))\n  \n  prop_df <- tibble(phat, lb, ub)\n  \n  return (prop_df)\n}\n```\n:::\n\n\n\n\n## n = 100, p = 0.87\n\n$np = 100 * 0.87 = 87$\n\n$n(1-p) = 100 * (1-0.87) = 13$\n\nThe large sample assumption holds because both checks are greater than 10!\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## n = 100, p = 0.87\nn_sim <- 5000\np <- 0.87\n\nprop_ci_df <- map(1:n_sim, \\(i) generate_samp_prop(n=100, p=0.87)) |> bind_rows()\n\nmany_ci_df <- prop_ci_df |> mutate(ci_width = ub - lb,\n                                   ci_cover_ind = if_else(p > lb & p < ub,\n                                                          true = 1, \n                                                          false = 0))\nmany_ci_df |> summarise(avg_width = mean(ci_width),\n                        coverage_rate = mean(ci_cover_ind))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 2\n  avg_width coverage_rate\n      <dbl>         <dbl>\n1     0.109         0.882\n```\n\n\n:::\n:::\n\n\n\n\n## n = 100, p = 0.46\n\n$np = 100 * 0.46 = 46$\n\n$n(1-p) = 100 * (1-0.46) = 54$\n\nThe large sample assumption holds because both checks are greater than 10!\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## n = 100, p = 0.46\nn_sim <- 5000\np <- 0.46\n\nprop_ci_df <- map(1:n_sim, \\(i) generate_samp_prop(n=100, p=0.46)) |> bind_rows()\n\nmany_ci_df <- prop_ci_df |> mutate(ci_width = ub - lb,\n                                   ci_cover_ind = if_else(p > lb & p < ub,\n                                                          true = 1, \n                                                          false = 0))\nmany_ci_df |> summarise(avg_width = mean(ci_width),\n                        coverage_rate = mean(ci_cover_ind))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 2\n  avg_width coverage_rate\n      <dbl>         <dbl>\n1     0.163         0.895\n```\n\n\n:::\n:::\n\n\n\n\n## n = 20, p = 0.87\n\n$np = 20 * 0.87 = 17.4$\n\n$n(1-p) = 20 * (1-0.87) = 2.6$\n\nThe large sample size assumption check does not hold because n(1-p) is not greater than 10.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## n = 20, p = 0.87\nn_sim <- 5000\np <- 0.87\n\nprop_ci_df <- map(1:n_sim, \\(i) generate_samp_prop(n=20, p=0.87)) |> bind_rows()\n\nmany_ci_df <- prop_ci_df |> mutate(ci_width = ub - lb,\n                                   ci_cover_ind = if_else(p > lb & p < ub,\n                                                          true = 1, \n                                                          false = 0))\nmany_ci_df |> summarise(avg_width = mean(ci_width),\n                        coverage_rate = mean(ci_cover_ind))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 2\n  avg_width coverage_rate\n      <dbl>         <dbl>\n1     0.228         0.907\n```\n\n\n:::\n:::\n\n\n\n\n## n = 20, p = 0.46\n\n$np = 20 * 0.46 = 9.2$\n\n$n(1-p) = 20 * (1-0.46) = 10.8$\n\nThe large sample size assumption check does not hold because np is not greater than 10.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## n = 20, p = 0.46\nn_sim <- 5000\np <- 0.46\n\nprop_ci_df <- map(1:n_sim, \\(i) generate_samp_prop(n=20, p=0.46)) |> bind_rows()\n\nmany_ci_df <- prop_ci_df |> mutate(ci_width = ub - lb,\n                                   ci_cover_ind = if_else(p > lb & p < ub,\n                                                          true = 1, \n                                                          false = 0))\nmany_ci_df |> summarise(avg_width = mean(ci_width),\n                        coverage_rate = mean(ci_cover_ind))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 2\n  avg_width coverage_rate\n      <dbl>         <dbl>\n1     0.357         0.884\n```\n\n\n:::\n:::\n\n\n\n\n## n = 4, p = 0.87\n\n$np = 4 * 0.87 = 3.48$\n\n$n(1-p) = 4 * (1-0.87) = 0.52$\n\nThe large sample size assumption check does not hold because both checks are less than 10.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## n = 4, p = 0.87\nn_sim <- 5000\np <- 0.87\n\nprop_ci_df <- map(1:n_sim, \\(i) generate_samp_prop(n=4, p=0.87)) |> bind_rows()\n\nmany_ci_df <- prop_ci_df |> mutate(ci_width = ub - lb,\n                                   ci_cover_ind = if_else(p > lb & p < ub,\n                                                          true = 1, \n                                                          false = 0))\nmany_ci_df |> summarise(avg_width = mean(ci_width),\n                        coverage_rate = mean(ci_cover_ind))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 2\n  avg_width coverage_rate\n      <dbl>         <dbl>\n1     0.316         0.426\n```\n\n\n:::\n:::\n\n\n\n\n## n = 4, p = 0.46\n\n$np = 4 * 0.46 = 1.84$\n\n$n(1-p) = 4 * (1-0.46) = 2.16$\n\nThe large sample size assumption check does not hold because both checks are less than 10.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## n = 4, p = 0.46\nn_sim <- 5000\np <- 0.46\n\nprop_ci_df <- map(1:n_sim, \\(i) generate_samp_prop(n=4, p=0.46)) |> bind_rows()\n\nmany_ci_df <- prop_ci_df |> mutate(ci_width = ub - lb,\n                                   ci_cover_ind = if_else(p > lb & p < ub,\n                                                          true = 1, \n                                                          false = 0))\nmany_ci_df |> summarise(avg_width = mean(ci_width),\n                        coverage_rate = mean(ci_cover_ind))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 2\n  avg_width coverage_rate\n      <dbl>         <dbl>\n1     0.663         0.874\n```\n\n\n:::\n:::\n\n\n\n\n\n## Results\n\n\n|                          |         | $n = 4$     | $n = 20$ | $n = 100$|\n|:----:|:-----------------:|:-------------:|:------------:|:------------:|\n| $p = 0.46$   | Coverage Rate       |  0.872      | 0.890    |   0.885  |\n| $p = 0.87$   | Coverage Rate       |  0.415      | 0.897    |   0.878  |\n|              |                     |             |          |          |\n| $p = 0.46$   | Average Width       |  0.662      | 0.357    |   0.163  |\n| $p = 0.87$   | Average Width       |  0.308      | 0.227    |   0.109  |\n\n\n: Table of Results {.striped .hover}\n\n\n## Summary of Results\n\nFor the case where n = 4 and p = 0.87, the coverage rate is quite low at 0.415, meaning the true value of p falls within the confidence interval in less than half of the simulations. In contrast, for n = 20 and p = 0.87, the coverage rate is significantly higher at 0.897, indicating that the confidence interval captures the true value in almost 90% of simulations, which is what we want with a 90% confidence level. Among all cases, this scenario has the highest coverage rate. The n = 100 cases are also quite good with a coverage rates close to 0.9. Additionally, the variation in coverage rate is much greater for small sample sizes (range of 0.457) compared to the larger sample sizes, which both only vary by 0.07.\n\nAs sample size increases, the average interval width decreases. For instance, when n = 4, p = 0.46, the interval width is quite large at 0.662, but when n = 100, p = 0.87, it shrinks to 0.109. The difference in average interval width for different values of p is much larger for the small sample size of n = 4 (difference of 0.354) than for the larger sample size of n = 100 (difference of 0.054). Across all sample sizes, p = 0.87 consistently results in a smaller average interval width.\n\nAdditionally, both n = 4 and n = 20 violate the necessary sample size assumptions, whereas n = 100 is large enough to meet these conditions. The results for n = 100 align with what we expect from a simulated confidence interval, whereas the smaller sample sizes show more skewed outcomes. Interestingly, for n = 4, p = 0.46, the coverage rate is relatively high at 0.872, which can be attributed to the large average interval width.\n\n\n\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}